name: build and release
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          always-auth: true
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@mauriciorobayo'
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build
        run: npm run build
  sync-assets:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          always-auth: true
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@mauriciorobayo'
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Build
        run: npm run build
      - name: Sync assets
        run: aws s3 sync assets/ s3://pyphoy/assets --acl public-read
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup SSH Keys and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PYPHOY_PRIVATE_SSH_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.PYPHOY_HOST_FINGERPRINT }}" > ~/.ssh/known_hosts
          sudo chmod 600 ~/.ssh/id_rsa
      - name: Deploy
        env:
          PYPHOY_PRODUCTION_HOST: ${{ secrets.PYPHOY_PRODUCTION_HOST }}
          PYPHOY_PRODUCTION_PORT: ${{ secrets.PYPHOY_PRODUCTION_PORT }}
          PYPHOY_PRODUCTION_USER: ${{ secrets.PYPHOY_PRODUCTION_USER }}
        run: npx pm2 deploy production update
