mixin archiveWarning()
  p.t1.small Esta página no corresponde con la fecha actual.
  a.t1.small.hyperlink(href=pagePath) Consulte acá el pico y placa para hoy.

mixin externalLink(url, text)
  a(href=url rel="nofollow" target="_blank")= text

mixin displayMessages(messages)
  for message in messages
    div.message
      if message.url
        +externalLink(message.url, `${message.message} ↗️`)
      else
        p= message.message

mixin ad(filter)
  if pypData.data[0].categories[0].path === filter
    .container
      a.button.ad.bg-yellow.text-center(href="https://docs.google.com/forms/d/e/1FAIpQLSeTDO2QxsUAGZvSYpnxJE_7uLM3bWJGMe_wXPqPttWvbqs9fA/viewform?usp=sf_link")
        p.uppercase.lead Busco conductor turno largo
        p.hyperlink Información acá

mixin email(hyperlink = false)
  span(class=hyperlink ? 'hyperlink' : '') &#105;&#110;&#102;&#111;&#064;&#112;&#121;&#112;&#104;&#111;&#121;&#046;&#099;&#111;&#109;

mixin selectCity(cityName, main=false)
  if citiesMap
    .select
      select#cities(class=main && 'main' required onchange="window.location.href = '/' + this.options[this.selectedIndex].value")
        if !city
          option(value="" disabled selected hidden) Ciudad...
        each city, citySlug in citiesMap
          - const selected = city.name === cityName
          option(value=citySlug selected=selected)= city.name

mixin selectCategory(citySlug, categoryName)
  if citiesMap
    .select
      select#categories(required onchange="window.location.href = '/' + this.options[this.selectedIndex].value")
        if !categoryName
          option(value="" disabled selected hidden) Categoría...
        each category, categorySlug in citiesMap[citySlug].categories
          - const selected = category.name === categoryName
          option(value=`${citySlug}/${categorySlug}` selected=selected)= category.name

mixin breadCrumbs()
  if path && path.length > 1
    .breadcrumbs
      - let currentPath = ''
      each crumb, index in path
        - currentPath += "/" + crumb.path
        if index === path.length - 1
          span.current= crumb.name
        else
          a(href=currentPath)= crumb.name
          |
          | /
          |

mixin datePicker()
  form(action=".")
    input(type="date" name="d" value=date)
    input(type="submit" value="Consultar")

mixin cityInfo(city)
  h2.title
    a(href=`/${city.path}`) Pico y placa vigente en #{city.name}
  p.subtitle Las siguientes son las medidas de restricción vehicular vigentes para #{city.name} durante el #{timePeriod}, de acuerdo con lo establecido por la Alcaldía de #{city.name}:

mixin categoryList(city)
  ul.list-style-none
    each category in city.categories
      li.m-1.title
        a(href=`/${category.path}` title=`Pico y placa ${category.name.toLowerCase()} en ${city.name}`) Pico y placa #{category.name.toLowerCase()}
        
mixin categoryInfo(city)
  each category in city.categories
    - const pyp = category.data[0]
    header
      h2.title
        a(href=`/${pyp.path}`)= title

    article

      h3#dias-de-aplicacion Días de apliación
      section
        if pyp.excludedDays.length
          ul.list-style-none
            each day in [0, 1, 2, 3, 4, 5, 6].filter(day => !pyp.excludedDays.includes(day))
              li= ['Domingos', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábados'][day]
        else
          p Aplica todos los días
        p= `${pyp.skipHolidays ? 'No Aplica' : 'Aplica'} los días festivos`
    
      h3#horario Horario
      section
        +hours(pyp.hours, ["list-style-none"])
    
      h3#clase-de-vehiculos Clase de vehículos
      section= pyp.vehicleClasses
    
      h3#esquema Esquema
      - const scheme = [ 'Último dígito del número de la placa', 'Primer dígito del número de la placa']
      section= scheme[pyp.scheme] || pyp.scheme

      if pyp.decrees.length
        h3#decreto Decreto
        section
          ul.list-style-none
            each decree in pyp.decrees
              li
                if decree.url
                  +externalLink(decree.url, decree.name)
                else
                  |
                  = decree.name
    
      if pyp.observations
        h3#observaciones Observaciones
        section !{pyp.observations}
      
      if pyp.zones
        h3#vias Vías
        section !{pyp.zones}
    
      if pyp.maps.length
        h3#mapa Mapa
        each map in pyp.maps
          section 
            img(src=map.url alt=map.name)
    
      if pyp.exceptions
        h3#excepciones Excepciones
        section !{pyp.exceptions}
    
      h3#sanciones Sanciones
      section Los infractores a lo dispuesto serán sancionados con multa equivalente a quince (15) salarios mínimos diarios legales vigentes e inmovilización del vehículo, según lo consagrado por el artículo 131 literal C numeral 14 de la #[+externalLink("http://www.secretariasenado.gov.co/senado/basedoc/ley_0769_2002.html", "Ley 769 de 2002")].

mixin hours(hours, classes, interactive=false)
  each hour in hours
    - let done = false
    if hour.comment && hour.comment !== "Todo el día"
      div.hour-category(class=classes) #{hour.comment}:
    ul.hours(class=classes class=interactive && "hours-interactive" data-comment=hour.comment data-days=hour.days.join())
      each h in hour.hours
        li.hour(data-start=h[0] data-end=h[1])
          |
          = hour.comment === "Todo el día" ? hour.comment : ""
          |
          = h.map(h => helpers.convert24toAMPM(h)).join(' a ')

mixin cityTable(city)
  table.table
    thead.dark
      tr
        th Categoría
        th.text-right Placas
    tbody
      each category in city.categories
        - const na = !category.data[0].numbers.length
        tr(class=na ? 'table-secondary text-muted' : '')
          td(title=`Pico y placa ${category.name.toLowerCase()} en ${city.name}`)
            a(href=`/${category.path}`)
              span= category.emoji
              |
              |
              = category.name
            if !na
              +hours(category.data[0].hours, ["list-style-none", "small"], true)
          +tdLicensePlate(category.data[0].numbers, helpers.isPublic(category.name))

mixin tdLicensePlate(numbers, public)
  td.text-right
      +licensePlate(numbers, public)

mixin licensePlate(numbers, public)
    span(class=`plate is-${public ? 'public' : 'particular'}`)= helpers.pypNumbersToString(numbers)

mixin pypQuery(path)
  - letters = ["H", "I", "J", "A", "B", "C", "D", "E", "F", "G"]
  - numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
  - nums = path === '/manizales/transporte-publico-colectivo' ? letters : numbers
  .query
    h3 ¿Cuándo tengo pico y placa?
    .nums
      each val in nums
        if num == val
          span= val
        else
          span
            a(href=`${path}/${val}`)= val
